// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"net/http"

	"github.com/Pranc1ngPegasus/trial-field/adapter/handler"
	"github.com/Pranc1ngPegasus/trial-field/adapter/resolver"
	"github.com/Pranc1ngPegasus/trial-field/adapter/server"
	logger2 "github.com/Pranc1ngPegasus/trial-field/domain/logger"
	"github.com/Pranc1ngPegasus/trial-field/infra/configuration"
	"github.com/Pranc1ngPegasus/trial-field/infra/logger"
)

// Injectors from wire.go:

func initialize() (*app, error) {
	loggerLogger, err := logger.NewLogger()
	if err != nil {
		return nil, err
	}
	configurationConfiguration, err := configuration.NewConfiguration(loggerLogger)
	if err != nil {
		return nil, err
	}
	executableSchema := resolver.NewSchema()
	handlerHandler := handler.NewHandler(loggerLogger, executableSchema)
	httpServer := server.NewServer(loggerLogger, configurationConfiguration, handlerHandler)
	mainApp := &app{
		logger: loggerLogger,
		server: httpServer,
	}
	return mainApp, nil
}

// wire.go:

type app struct {
	logger logger2.Logger
	server *http.Server
}
